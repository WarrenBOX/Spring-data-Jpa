Reflection；框架设计的灵魂 -》 框架是半成品软件
一、 自我理解定义：
-定义：对字节码文件进行操作| 将类的各个部分封装为其他对象 -》 Class类对象，描述字节码文件的共同特征
-流程：得到包含成员变量Field[] fields，成员方法Method[] methods，构造器Constructor[] cons 组件的Class字节码文件，加载（通过类加载器）到内存中，再使用这个类的信息
-好处：1. 在程序运行中操作这个对象
      2. 解耦，提高程序可扩展性
-与正常创建类并运行的区别： 正常情况下，写好一个类会生成.java文件，编译后变成.class文件，启动程序时会把文件加载到内存
                  反射情况下，程序已经在运行，不能暂停程序来写类再编译。解决方法是，在程序外部准备好类的全类名，地址， 在运行时通过类的类名解析类的内部情况，

- 问题：1. 反射有没有绕过编译？ --》 Class.forName("") 时得到的是字节码文件?   -> 根据类名返回一个Class的实例对象，例如person类，已经在内存中
            （解答）
            1.1 运行时编译技术:

       2. classloader 和 Class.forName() 加载类的区别：
            （解答） Class.forName（）加载的类已经被初始化（执行了静态代码块和静态变量赋值）， 而classLoader加载的类还没有被linking

       3. Classloader来加载资源文件的原理： 需要理解字节流  -》 IO
             （解答）
